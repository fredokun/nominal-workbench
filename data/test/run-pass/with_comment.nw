######################
#    test comment    #
######################

# a comment
kind Term : type
kind Variable : atom

operator Var : Variable -> Term #another comment
operator App : Term * Term -> Term
operator Lambda : [Variable] * Term -> Term
operator Subst : [Variable] * Term * Term -> Term

rule [beta] : #the last comment #
  App(Lambda(?x, ?T), ?U)  => Subst(?x, ?T, ?U)

rule [subst-var] :
  Subst(?x, Var(?x), ?T) => ?T

rule [subst-nvar] :
  Subst(?x, Var(?y), ?T) => Var(?y)

rule [app] :
  Subst(?x, App(?T, ?U), ?U) => App(Subst(?x, ?T, ?U))

rule [lambda] :
  Subst(?x, Lambda(?y, ?T), ?U) => Lambda(?y, Subst(?x, ?T, ?U))
